name: 'Deploy to server'
on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build --build-arg "NATS_URL"=${{ secrets.NATS_URL }} -t go-notifications:latest .

      - name: Save Docker image as tar file
        run: docker save -o go-notifications.tar go-notifications:latest

      - name: Transfer Docker image to remote server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no style-booker.tar ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}

      - name: Load Docker image on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}  << 'ENDSSH'
          docker load -i /${{ secrets.REMOTE_SERVER_PATH }}/style-booker.tar
          ENDSSH
      - name: Transfer Docker Compose file to remote server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yaml ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}

      - name: Deploy Docker containers using Docker Compose on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          MINIO_USER=${{ secrets.MINIO_USER }} MINIO_PASSWORD=${{ secrets.MINIO_PASSWORD }} MINIO_BUCKETS=${{ secrets.MINIO_DEFAULT_BUCKETS }} DB_HOST=localhost DB_PORT=5432 DB_USER=${{ secrets.DB_USER }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_NAME=${{ secrets.DB_NAME }} docker compose -f ${{ secrets.REMOTE_SERVER_PATH }}/docker-compose.yaml up -d
          ENDSSH
          
